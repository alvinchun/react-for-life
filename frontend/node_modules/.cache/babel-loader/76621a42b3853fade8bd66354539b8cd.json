{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD55C\\uAD11\\uD76C\\\\Desktop\\\\React\\\\react-for-life\\\\frontend\\\\src\\\\UseCallback2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Box } from './components/Box.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UseCallback2 = () => {\n  _s();\n\n  const [size, setSizes] = useState(100);\n  const [isDark, setIsDark] = useState(false);\n  const createBoxStyle = useCallback(() => {\n    return {\n      backgroundColor: 'pink',\n      width: `${size}px`,\n      height: `${size}px`\n    };\n  }, [size]); //의존은 뭐가 변할때만 초기화가 됬으면 좋겠는걸 넣는다.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: isDark ? 'black' : 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: size,\n      onChange: e => setSizes(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsDark(!isDark),\n      children: \"Change Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      createBoxStyle: createBoxStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseCallback2, \"ez6MQM0vG/gUH131eWMPXDU1+V4=\");\n\n_c = UseCallback2;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseCallback2\");","map":{"version":3,"sources":["C:/Users/한광희/Desktop/React/react-for-life/frontend/src/UseCallback2.js"],"names":["React","useState","useEffect","useMemo","useCallback","Box","UseCallback2","size","setSizes","isDark","setIsDark","createBoxStyle","backgroundColor","width","height","background","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SAASC,GAAT,QAAqB,qBAArB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEhC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,GAAD,CAAjC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMU,cAAc,GAAGP,WAAW,CAAC,MAAM;AACvC,WAAO;AACLQ,MAAAA,eAAe,EAAE,MADZ;AAELC,MAAAA,KAAK,EAAG,GAAEN,IAAK,IAFV;AAGLO,MAAAA,MAAM,EAAG,GAAEP,IAAK;AAHX,KAAP;AAKD,GANiC,EAM/B,CAACA,IAAD,CAN+B,CAAlC,CALgC,CAYhC;;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AACVQ,MAAAA,UAAU,EAAEN,MAAM,GAAG,OAAH,GAAa;AADrB,KAAZ;AAAA,4BAIA;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,KAAK,EAAEF,IAFP;AAGA,MAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,YAJA,eASA;AAAA;AAAA;AAAA;AAAA,YATA,eAaA;AAAQ,MAAA,OAAO,EAAE,MAAKR,SAAS,CAAC,CAACD,MAAF,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA,eAcA,QAAC,GAAD;AAAK,MAAA,cAAc,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAhCM;;GAAML,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { Box }  from './components/Box.js'\r\n\r\nexport const UseCallback2 = () => {\r\n\r\n  const [size, setSizes] = useState(100);\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  const createBoxStyle = useCallback(() => {\r\n    return {\r\n      backgroundColor: 'pink',\r\n      width: `${size}px`,\r\n      height: `${size}px`\r\n    }\r\n  }, [size])\r\n  //의존은 뭐가 변할때만 초기화가 됬으면 좋겠는걸 넣는다.\r\n\r\n  return (\r\n    <div style={{\r\n      background: isDark ? 'black' : 'white'\r\n    }}\r\n    >\r\n    <input\r\n    type=\"number\"\r\n    value={size} \r\n    onChange={(e) => setSizes(e.target.value)}\r\n    />\r\n    <br />\r\n      {/* <div style={\r\n      createBoxStyle()}>\r\n      </div> */}\r\n    <button onClick={()=> setIsDark(!isDark)}>Change Theme</button>\r\n    <Box createBoxStyle={createBoxStyle} />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}