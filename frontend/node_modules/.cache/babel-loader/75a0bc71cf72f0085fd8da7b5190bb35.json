{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD55C\\uAD11\\uD76C\\\\Desktop\\\\React\\\\react-for-life\\\\frontend\\\\src\\\\UseEffect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UseEffect = () => {\n  _s();\n\n  const [count, setCount] = useState(1);\n  const [name, setName] = useState('');\n  const [name2, setName2] = useState('');\n\n  const handleCountUpdate = () => {\n    setCount(count + 1);\n  };\n\n  const handleInputChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleInputChange2 = e => {\n    setName2(e.target.value);\n  }; // useEffect(() => {\n  //   console.log(\"Rendering depending on count\");\n  // }, [count])\n  // useEffect(() => {\n  //   console.log(\"Rendering depending on name\");\n  // }, [name])\n\n\n  useEffect(() => {\n    console.log(\"Rendering depending on both count and name\");\n  }, [count, name]); // useEffect(() => {\n  //   console.log(\"logging on every rendering\");\n  // })\n  // useEffect(() => {\n  //   console.log(\"logging only on the first time\");\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCountUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInputChange,\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"name: \", name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleInputChange2,\n      value: name2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"name: \", name2, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseEffect, \"qaieydmqwuOAThpuNo41nnQZeTg=\");\n\n_c = UseEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffect\");","map":{"version":3,"sources":["C:/Users/한광희/Desktop/React/react-for-life/frontend/src/UseEffect.js"],"names":["React","useState","useEffect","UseEffect","count","setCount","name","setName","name2","setName2","handleCountUpdate","handleInputChange","e","target","value","handleInputChange2","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMS,iBAAiB,GAAG,MAAM;AAC9BL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/BL,IAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIH,CAAD,IAAO;AAChCH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD,CAd6B,CAkB7B;AACA;AACA;AAEA;AACA;AACA;;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,GAFQ,EAEN,CAACb,KAAD,EAAQE,IAAR,CAFM,CAAT,CA1B6B,CA8B7B;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEI,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEO,iBAA7B;AAAgD,MAAA,KAAK,EAAEL;AAAvD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,2BAAWA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAES,kBAA7B;AAAiD,MAAA,KAAK,EAAEP;AAAxD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,2BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArDM;;GAAML,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nexport const UseEffect = () => {\r\n  const [count, setCount] = useState(1);\r\n  const [name, setName] = useState('');\r\n  const [name2, setName2] = useState('');\r\n\r\n\r\n  const handleCountUpdate = () => {\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  const handleInputChange2 = (e) => {\r\n    setName2(e.target.value)\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Rendering depending on count\");\r\n  // }, [count])\r\n  \r\n  // useEffect(() => {\r\n  //   console.log(\"Rendering depending on name\");\r\n  // }, [name])\r\n\r\n  useEffect(() => {\r\n    console.log(\"Rendering depending on both count and name\");\r\n  }, [count, name])\r\n  \r\n  // useEffect(() => {\r\n  //   console.log(\"logging on every rendering\");\r\n  // })\r\n  \r\n  // useEffect(() => {\r\n  //   console.log(\"logging only on the first time\");\r\n  // },[])\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleCountUpdate}>\r\n        Update\r\n      </button>\r\n      <h2>\r\n        {count}\r\n      </h2>\r\n      <input type=\"text\" onChange={handleInputChange} value={name} />\r\n      <h2>name: {name} </h2>\r\n      \r\n      <input type=\"text\" onChange={handleInputChange2} value={name2} />\r\n      <h2>name: {name2} </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}