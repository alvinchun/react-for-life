{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uD55C\\uAD11\\uD76C\\\\Desktop\\\\React\\\\react-for-life\\\\frontend\\\\src\\\\UseCallback.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UseCallback = () => {\n  _s();\n\n  const [number, setNumber] = useState(0); // const hardSum = hardCalculate(hardNumber)\n\n  const hardSum = useMemo(() => {\n    return hardCalculate(hardNumber);\n  }, [hardNumber]);\n  const easySum = easyCalculate(easyNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC5B4\\uB824\\uC6B4 \\uACC4\\uC0B0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: hardNumber,\n      onChange: e => setHardNumber(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" + 10000 = \", hardSum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC26C\\uC6B4 \\uACC4\\uC0B0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: easyNumber,\n      onChange: e => setEasyNumber(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" + 1 = \", easySum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseCallback, \"4fUcUFXI0fensTyWFvkwacTX/zM=\");\n\n_c = UseCallback;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseCallback\");","map":{"version":3,"sources":["C:/Users/한광희/Desktop/React/react-for-life/frontend/src/UseCallback.js"],"names":["React","useState","useEffect","useMemo","useCallback","UseCallback","number","setNumber","hardSum","hardCalculate","hardNumber","easySum","easyCalculate","easyNumber","e","setHardNumber","parseInt","target","value","setEasyNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,WAA9C,QAAiE,OAAjE;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAE7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC,CAF6B,CAI7B;;AAEA,QAAMO,OAAO,GAAGL,OAAO,CAAC,MAAI;AAC1B,WAAOM,aAAa,CAACC,UAAD,CAApB;AACD,GAFsB,EAErB,CAACA,UAAD,CAFqB,CAAvB;AAIA,QAAMC,OAAO,GAAGC,aAAa,CAACC,UAAD,CAA7B;AAEF,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEH,UAA5B;AAAwC,MAAA,QAAQ,EAAGI,CAAD,IAAOC,aAAa,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AAAtE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gCAAkBV,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEK,UAA5B;AAAwC,MAAA,QAAQ,EAAGC,CAAD,IAAOK,aAAa,CAACH,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AAAtE;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,4BAAcP,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvBM;;GAAMN,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\n\r\nexport const UseCallback = () => {\r\n\r\n    const [number, setNumber] = useState(0);\r\n\r\n    // const hardSum = hardCalculate(hardNumber)\r\n\r\n    const hardSum = useMemo(()=>{\r\n      return hardCalculate(hardNumber)\r\n    },[hardNumber])\r\n\r\n    const easySum = easyCalculate(easyNumber)\r\n\r\n  return (\r\n    <div>\r\n        <h3>어려운 계산기</h3>\r\n        <input type=\"number\" value={hardNumber} onChange={(e) => setHardNumber(parseInt(e.target.value))}></input>\r\n        <span> + 10000 = {hardSum}</span>\r\n\r\n        <h3>쉬운 계산기</h3>\r\n        <input type=\"number\" value={easyNumber} onChange={(e) => setEasyNumber(parseInt(e.target.value))}></input>\r\n        <span> + 1 = {easySum}</span>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}